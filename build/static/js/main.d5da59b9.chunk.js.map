{"version":3,"sources":["firebase/config.js","editor/styles.js","editor/editor.js","sidebar/styles.js","sidebaritem/styles.js","sidebaritem/sidebarItem.js","helpers.js","sidebar/sidebar.js","App.js","reportWebVitals.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","storage","firestore","styles","theme","root","backgroundColor","palette","background","paper","height","position","left","width","boxShadow","titleInput","boxSizing","border","padding","fontSize","color","paddingLeft","editIcon","top","editorContainer","withStyles","props","useState","text","setText","selectedNote","title","setTitle","id","setId","classes","useEffect","body","updateTitle","txt","a","className","placeholder","value","onChange","e","target","func","delay","timer","args","clearTimeout","setTimeout","apply","debounce","val","noteUpdate","newChatBtn","borderRadius","unreadMessage","right","newNoteBtn","borderBottom","sidebarContainer","marginTop","float","overflowY","overflowX","newNoteInput","margin","outline","newNoteSubmitBtn","listItem","cursor","textSection","maxWidth","deleteIcon","str","_index","_note","selectedNoteIndex","ListItem","selected","alignItems","onClick","n","i","selectNote","ListItemText","primary","secondary","substring","replace","note","window","confirm","deleteNote","addingNote","setAddingNote","notes","Button","type","onKeyUp","newNote","List","Array","isArray","map","Divider","App","setSelectedNote","setNotes","setSelectedNoteIndex","collection","onSnapshot","serverUpdate","docs","_doc","data","console","log","index","noteIndex","indexOf","filter","length","doc","delete","add","timestamp","FieldValue","serverTimestamp","newFromDB","newID","newNoteIndex","noteObj","update","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d5da59b9.chunk.js","sourcesContent":["import firebase from 'firebase/app';\n\nimport 'firebase/storage';\nimport 'firebase/firestore';\n\n\n\n\n\n// Your web app's Firebase configuration\n  // For Firebase JS SDK v7.20.0 and later, measurementId is optional\n  var firebaseConfig = {\n    apiKey: \"AIzaSyCusFFSYjvEg6EybCpaeeC6LQIT3zL4i60\",\n    authDomain: \"evernote-console.firebaseapp.com\",\n    projectId: \"evernote-console\",\n    storageBucket: \"evernote-console.appspot.com\",\n    messagingSenderId: \"776554901895\",\n    appId: \"1:776554901895:web:3934d64778852d4bbf6322\",\n    measurementId: \"G-1FWKXL89F8\"\n  };\n  // Initialize Firebase\n  firebase.initializeApp(firebaseConfig);\n\nconst projectStorage = firebase.storage();\nconst projectFirestore = firebase.firestore();\n//const timestamp = firebase.firestore.FieldValue.serverTimestamp;\n\nexport default { projectStorage, projectFirestore};","const styles = theme => ({\n    root: {\n      backgroundColor: theme.palette.background.paper,\n      height: 'calc(100px - 35px)',\n      position: 'absolute',\n      left: '0',\n      width: '300px',\n      boxShadow: '0px 0px 2px black'\n    },\n    titleInput: {\n      height: '50px',\n      boxSizing: 'border-box',\n      border: 'none',\n      padding: '5px',\n      fontSize: '24px',\n      width: 'calc(100% - 300px)',\n      backgroundColor: '#29487d',\n      color: 'white',\n      paddingLeft: '50px'\n    },\n    editIcon: {\n      position: 'absolute',\n      left: '310px',\n      top: '12px',\n      color: 'white',\n      width: '10',\n      height: '10'\n    },\n    editorContainer: {\n      height: '100vh',\n      boxSizing: 'border-box'\n    }\n  });\n  \n  export default styles;","\nimport React, {useState, useRef, useEffect} from 'react';\nimport ReactQuill from 'react-quill';\nimport debounce from '../helpers';\nimport BorderColorIcon from '@material-ui/icons/BorderColor';\nimport { withStyles } from '@material-ui/core/styles';\nimport styles from './styles';\n\nfunction EditorComponent(props) {\n      const [text, setText] = useState('');\n      const [title, setTitle] = useState(props.selectedNote.title);\n      const [id, setId] = useState(props.selectedNote.id);\n      const classes = props;\n\n\n      // const updateBody = async(val)=>{\n      //       await setText(val);\n      //       update();\n      // };\n\n\n      const updateBody = (val) => {\n            props.noteUpdate(id, {\n              title: title,\n              body: val\n            });\n            \n            setText(val);\n            //console.log('this ',id)\n      };\n        \n      const debounce = (func, delay) => {\n            let timer;\n        \n            return (...args) => {\n              clearTimeout(timer);\n              timer = setTimeout(() => func.apply(null, args), delay);\n            };\n      };\n\n      // const update = useRef(\n\t// \tdebounce(() => {\n\t// \t\tprops.noteUpdate(id,{\n      //                   title:title,\n      //                   body:text,\n      //             })\n      //             //console.log(props.selectedNote.body);\n\t// \t}, 1500)\n      // ).current\n\n      useEffect(()=>{\n            setText(props.selectedNote.body);\n            setTitle(props.selectedNote.title);\n            setId(props.selectedNote.id);\n            //console.log('this ',id)\n      },[])\n\n \n\n      useEffect(()=>{\n            if(props.selectedNote.id !== id) {\n            setText(props.selectedNote.body);\n            setTitle(props.selectedNote.title);\n            setId(props.selectedNote.id);\n            //console.log('this is ', id)\n            }\n      },[])\n\n      const updateTitle = async(txt) => {\n            await setTitle(txt)\n      }\n\n    return (\n        \n            <div className={classes.editorContainer}>\n                  <BorderColorIcon className={classes.editIcon}></BorderColorIcon>\n                  <input className={classes.titleInput} placeholder='Note title....' value={title ? title : ''} onChange={(e) => updateTitle(e.target.value)}>\n                  </input>\n                  <ReactQuill\n                        value = {text}\n                        onChange={debounce(updateBody, 1500)}>\n\n                  </ReactQuill>\n\n            </div>\n      );\n}\n\nexport default withStyles(styles) (EditorComponent) ;","\nconst styles = theme => ({\n    root: {\n      backgroundColor: theme.palette.background.paper,\n      height: 'calc(100% - 35px)',\n      position: 'absolute',\n      left: '0',\n      width: '300px',\n      boxShadow: '0px 0px 2px black'\n    },\n    newChatBtn: {\n      borderRadius: '0px'\n    },\n    unreadMessage: {\n      color: 'red',\n      position: 'absolute',\n      top: '0',\n      right: '5px'\n    },\n    newNoteBtn: {\n      width: '100%',\n      height: '35px',\n      borderBottom: '1px solid black',\n      borderRadius: '0px',\n      backgroundColor: '#29487d',\n      color: 'white',\n      '&:hover': {\n        backgroundColor: '#88a2ce'\n      }\n    },\n    sidebarContainer: {\n      marginTop: '0px',\n      width: '300px',\n      height: '100vh',\n      boxSizing: 'border-box',\n      float: 'left',\n      overflowY: 'scroll',\n      overflowX: 'hidden'\n    },\n    newNoteInput: {\n      width: '100%',\n      margin: '0px',\n      height: '35px',\n      outline: 'none',\n      border: 'none',\n      paddingLeft: '5px',\n      '&:focus': {\n        outline: '2px solid rgba(81, 203, 238, 1)'\n      }\n    },\n    newNoteSubmitBtn: {\n      width: '100%',\n      backgroundColor: '#28787c',\n      borderRadius: '0px',\n      color: 'white'\n    }\n  });\n  \n  export default styles;","\nconst styles = theme => ({\n    listItem: {\n      cursor: 'pointer'\n    },\n    textSection: {\n      maxWidth: '85%'\n    },  \n    deleteIcon: {\n      position: 'absolute',\n      right: '5px',\n      top: 'calc(50% - 15px)',\n      '&:hover': {\n        color: 'red'\n      }\n    }\n  });\n  \n  export default styles;","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport styles from './styles';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { removeHTMLTags } from '../helpers';\n\n\nfunction SidebarItem(props) {\n\n\n  const { _index, _note, classes, selectedNoteIndex} = props;\n\n  const selectNote = (n,i) => props.selectNote(n,i);\n  const deleteNote = (note) => {\n    if(window.confirm(`Are you  sure you want to delete: ${note.title}`)){\n      props.deleteNote(note);\n    }\n  }\n\n\n    return (\n        <div key={_index}>\n          <ListItem \n            className={classes.listItem}\n            selected={selectedNoteIndex === _index}\n            alignItems='flex-start'>\n              <div \n              className={classes.textSection}\n              onClick={()=> selectNote(_note, _index)}\n              >\n                <ListItemText\n                primary={_note.title}\n                secondary={removeHTMLTags(_note.body.substring(0, 30))+'. . . .'}></ListItemText>\n              </div>\n              <DeleteIcon \n              onClick={()=>deleteNote(_note)}\n              className={classes.deleteIcon}\n              ></DeleteIcon>\n          </ListItem>\n         \n        </div>\n      );\n\n\n\n}\n\nexport default withStyles(styles) (SidebarItem);","\nexport default function debounce(a,b,c){\n    var d,e;\n    return function(){\n      function h(){\n        d=null;\n        c||(e=a.apply(f,g));\n      }\n      var f=this,g=arguments;\n      return (clearTimeout(d),d=setTimeout(h,b),c&&!d&&(e=a.apply(f,g)),e)\n    }\n  }\n  \n  export function removeHTMLTags (str) {\n    return str.replace(/<[^>]*>?/gm, '');\n  };","import React, {useState} from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport styles from './styles';\nimport List from '@material-ui/core/List';\nimport { Divider, Button } from '@material-ui/core';\nimport SidebarItemComponent from '../sidebaritem/sidebarItem';\n\nfunction SidebarComponent(props)\n{\n      const [addingNote, setAddingNote] = useState(false);\n      const [title, setTitle] = useState(null);\n\n      const newNoteBtnClick = () => {\n            setAddingNote (!(addingNote));\n            setTitle (null);\n      }\n\n      const { notes, classes, selectedNoteIndex } = props;\n\n      const updateTitle = (txt) => {\n            setTitle(txt);\n      }\n\n      const newNote = () => {\n            props.newNote(title);\n            setTitle(null);\n            setAddingNote(false);\n      }\n      const selectNote = (n, i) => props.selectNote(n, i);\n      const deleteNote = (note) => {\n            props.deleteNote(note);\n      }\n\n     if(notes){\n      return (\n            <div className={classes.sidebarContainer}>\n                  <Button \n                        onClick={newNoteBtnClick}\n                        className={classes.newNoteBtn}>{addingNote ? 'Cancel' : 'New Note'}</Button>\n                  {\n                        addingNote ? \n                        <div>\n                              <input type = 'text'\n                              className = {classes.newNoteInput}\n                              placeholder = 'Enter note title'\n                              onKeyUp={(e)=>updateTitle(e.target.value)}>\n                              </input>\n                              <Button\n                                    className={classes.newNoteSubmitBtn}\n                                    onClick={newNote}>Submit Note</Button>\n                        \n                        </div> : \n                              null\n                  }\n                  <List>\n                        { Array.isArray(notes) &&\n                              notes.map((_note,_index) => {\n                                    return(\n                                          <div key={_index}>\n                                                <SidebarItemComponent\n                                                _note={_note}\n                                                _index={_index}\n                                                selectedNoteIndex={selectedNoteIndex}\n                                                selectNote={selectNote}\n                                                deleteNote={deleteNote}>\n\n                                                </SidebarItemComponent>\n                                                <Divider></Divider>\n                                          </div>\n                                    )\n                              })\n                        }\n                  </List>\n            </div>\n      );\n     } else{\n           return(<div>yo</div>)\n     }\n}\n\nexport default withStyles(styles) (SidebarComponent);","import React, { useEffect, useState } from 'react';\n//import firebase from './firebase/config'\n//import logo from './logo.svg';\nimport './App.css';\nimport projectFirestore from './firebase/config';\nimport {Button, withStyles} from '@material-ui/core';\nimport firebase from 'firebase/app';\nimport EditorComponent from './editor/editor';\nimport SidebarComponent from './sidebar/sidebar';\n\nfunction App() {\n  const [selectedNote, setSelectedNote] = useState(null);\n  const [notes, setNotes] = useState(null);\n  const [selectedNoteIndex, setSelectedNoteIndex] = useState(null);\n\n  useEffect(()=>{\n    firebase\n      .firestore()\n      .collection('notes')\n      .onSnapshot(serverUpdate => {\n        const notes = serverUpdate.docs.map(_doc => {\n          const data = _doc.data();\n          data['id'] = _doc.id;\n          return data;\n        });\n        console.log(notes);\n        setNotes(notes);\n      })\n  },[])\n\n  const selectNote = (note, index) => {\n    setSelectedNote(note);\n    setSelectedNoteIndex(index);\n  }\n\n  const noteUpdate = (id, noteObj) => {\n    firebase\n      .firestore()\n      .collection('notes')\n      .doc(id)\n      .update({\n        title: noteObj.title,\n        body: noteObj.body,\n        timestamp: firebase.firestore.FieldValue.serverTimestamp()\n      })\n    //console.log('the ID is: ',id);\n  }\n\n  const deleteNote = async(note) => {\n    const noteIndex = notes.indexOf(note);\n    await setNotes(notes.filter(_note => _note !== note));\n    if(selectedNoteIndex === noteIndex) {\n\n       setSelectedNoteIndex(null);\n       setSelectedNote(null);\n    }\n    else{\n      notes.length > 1 ?\n      selectNote(notes[selectedNoteIndex - 1], selectedNoteIndex - 1) : \n       setSelectedNoteIndex(null);\n       setSelectedNote(null);\n    }\n\n    firebase.firestore().collection('notes').doc(note.id).delete();\n  }\n\n\n\n  const newNote = async(title) => {\n    const note = {\n      title: title,\n      body: ''\n    };\n     \n    const newFromDB = await firebase.firestore().collection('notes').add({\n      title: note.title,\n      body: note.body,\n      timestamp: firebase.firestore.FieldValue.serverTimestamp()\n    });\n    const newID = newFromDB.id;\n    await setNotes({ notes: [...notes, note] });\n    const newNoteIndex = notes.indexOf(notes.filter(_note => _note.id === newID)[0]);\n    setSelectedNote(notes[newNoteIndex]);\n    setSelectedNoteIndex(newNoteIndex);\n  }\n\n  return (\n    <div className=\"App\">\n      \n        <SidebarComponent \n            selectedNoteIndex = {selectedNoteIndex}\n            notes = {notes}\n            deleteNote={deleteNote}\n            selectNote = {selectNote}\n            newNote={newNote}\n            >\n        </SidebarComponent>\n        {\n        selectedNote ? \n          <EditorComponent \n          key = {selectedNoteIndex}\n          selectedNote={selectedNote}\n          selectedNoteIndex={selectedNoteIndex}\n          notes = {notes}\n          noteUpdate = {noteUpdate}></EditorComponent>  :\n        null\n        }\n        \n        \n    </div>\n  );\n\n\n  // const componentDidMount = () => {\n  //   firebase\n  //     .firestore()\n  //     .collection('notes')\n  //     .onSnapshot(serverUpdate => {\n  //       const notes = serverUpdate.docs.map(_doc => {\n  //         const data = _doc.data();\n  //         data['id'] = _doc.id;\n  //         return data;\n  //       });\n  //       console.log(notes);\n  //       this.setState({ notes: notes });\n  //     });\n  // }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('evernote-container')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}