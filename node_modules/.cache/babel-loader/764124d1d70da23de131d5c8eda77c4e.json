{"ast":null,"code":"var _jsxFileName = \"/home/pritam/Documents/GitHub/evernote-clone/evernote-clone/src/sidebar/sidebar.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport styles from './styles';\nimport List from '@material-ui/core/List';\nimport { Divider, Button } from '@material-ui/core';\nimport SidebarItemComponent from '../sidebaritem/sidebarItem';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction SidebarComponent(props) {\n  _s();\n\n  const [addingNote, setAddingNote] = useState(false);\n  const [title, setTitle] = useState(null);\n\n  const newNoteBtnClick = () => {\n    setAddingNote(addingNote = !addingNote);\n    setTitle(title = '');\n  };\n\n  const {\n    notes,\n    classes,\n    selectedNoteIndex\n  } = props;\n\n  const updateTitle = txt => {\n    console.log('here it is: ', txt);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.sidebarContainer,\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      onClick: newNoteBtnClick,\n      className: classes.newNoteBtn,\n      children: \"New Note\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 19\n    }, this), addingNote ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: classes.newNoteInput,\n        placeholder: \"Enter note title\",\n        onKeyUp: e => updateTitle(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 31\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 25\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 13\n  }, this);\n}\n\n_s(SidebarComponent, \"+/AJaWFnSGwVe5K02UVYENJbWjI=\");\n\n_c = SidebarComponent;\nexport default withStyles(styles)(SidebarComponent);\n\nvar _c;\n\n$RefreshReg$(_c, \"SidebarComponent\");","map":{"version":3,"sources":["/home/pritam/Documents/GitHub/evernote-clone/evernote-clone/src/sidebar/sidebar.js"],"names":["React","useState","withStyles","styles","List","Divider","Button","SidebarItemComponent","SidebarComponent","props","addingNote","setAddingNote","title","setTitle","newNoteBtnClick","notes","classes","selectedNoteIndex","updateTitle","txt","console","log","sidebarContainer","newNoteBtn","newNoteInput","e","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,SAASC,OAAT,EAAkBC,MAAlB,QAAgC,mBAAhC;AACA,OAAOC,oBAAP,MAAiC,4BAAjC;;;AAEA,SAASC,gBAAT,CAA0BC,KAA1B,EACA;AAAA;;AACM,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BV,QAAQ,CAAC,KAAD,CAA5C;AACA,QAAM,CAACW,KAAD,EAAQC,QAAR,IAAoBZ,QAAQ,CAAC,IAAD,CAAlC;;AAEA,QAAMa,eAAe,GAAG,MAAM;AACxBH,IAAAA,aAAa,CAAED,UAAU,GAAG,CAAEA,UAAjB,CAAb;AACAG,IAAAA,QAAQ,CAAED,KAAK,GAAG,EAAV,CAAR;AACL,GAHD;;AAKA,QAAM;AAAEG,IAAAA,KAAF;AAASC,IAAAA,OAAT;AAAkBC,IAAAA;AAAlB,MAAwCR,KAA9C;;AAEA,QAAMS,WAAW,GAAIC,GAAD,IAAS;AACvBC,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA2BF,GAA3B;AACL,GAFD;;AAMA,sBACM;AAAK,IAAA,SAAS,EAAEH,OAAO,CAACM,gBAAxB;AAAA,4BACM,QAAC,MAAD;AACM,MAAA,OAAO,EAAER,eADf;AAEM,MAAA,SAAS,EAAEE,OAAO,CAACO,UAFzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADN,EAKYb,UAAU,gBACV;AAAA,6BACM;AAAO,QAAA,IAAI,EAAG,MAAd;AACA,QAAA,SAAS,EAAIM,OAAO,CAACQ,YADrB;AAEA,QAAA,WAAW,EAAG,kBAFd;AAGA,QAAA,OAAO,EAAGC,CAAD,IAAKP,WAAW,CAACO,CAAC,CAACC,MAAF,CAASC,KAAV;AAHzB;AAAA;AAAA;AAAA;AAAA;AADN;AAAA;AAAA;AAAA;AAAA,YADU,GAQJ,IAblB;AAAA;AAAA;AAAA;AAAA;AAAA,UADN;AAkBL;;GApCQnB,gB;;KAAAA,gB;AAsCT,eAAeN,UAAU,CAACC,MAAD,CAAV,CAAoBK,gBAApB,CAAf","sourcesContent":["import React, {useState} from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport styles from './styles';\nimport List from '@material-ui/core/List';\nimport { Divider, Button } from '@material-ui/core';\nimport SidebarItemComponent from '../sidebaritem/sidebarItem';\n\nfunction SidebarComponent(props)\n{\n      const [addingNote, setAddingNote] = useState(false);\n      const [title, setTitle] = useState(null);\n\n      const newNoteBtnClick = () => {\n            setAddingNote (addingNote = !(addingNote));\n            setTitle (title = '');\n      }\n\n      const { notes, classes, selectedNoteIndex } = props;\n\n      const updateTitle = (txt) => {\n            console.log('here it is: ',txt);\n      }\n\n      \n\n      return (\n            <div className={classes.sidebarContainer}>\n                  <Button \n                        onClick={newNoteBtnClick}\n                        className={classes.newNoteBtn}>New Note</Button>\n                  {\n                        addingNote ? \n                        <div>\n                              <input type = 'text'\n                              className = {classes.newNoteInput}\n                              placeholder = 'Enter note title'\n                              onKeyUp={(e)=>updateTitle(e.target.value)}>\n                              </input>\n                        </div> : \n                              null\n                  }\n            </div>\n      );\n}\n\nexport default withStyles(styles) (SidebarComponent);"]},"metadata":{},"sourceType":"module"}