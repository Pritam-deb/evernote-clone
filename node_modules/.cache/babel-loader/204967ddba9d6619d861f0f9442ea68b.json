{"ast":null,"code":"var _jsxFileName = \"/home/pritam/Documents/GitHub/evernote-clone/evernote-clone/src/editor/editor.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef, useEffect } from 'react';\nimport ReactQuill from 'react-quill';\nimport debounce from '../helpers';\nimport BorderColorIcon from '@material-ui/icons/BorderColor';\nimport { withStyles } from '@material-ui/core/styles';\nimport styles from './styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction EditorComponent(props) {\n  _s();\n\n  const [text, setText] = useState('');\n  const [title, setTitle] = useState('');\n  const [id, setId] = useState('');\n  const classes = props; // const updateBody = async(val)=>{\n  //       await setText(val);\n  //       update();\n  // };\n\n  const updateBody = val => {\n    props.noteUpdate(id, {\n      title: title,\n      body: val\n    });\n    setText(val);\n  };\n\n  const debounce = (func, delay) => {\n    let timer;\n    return (...args) => {\n      clearTimeout(timer);\n      timer = setTimeout(() => func.apply(null, args), delay);\n    };\n  }; // const update = useRef(\n  // \tdebounce(() => {\n  // \t\tprops.noteUpdate(id,{\n  //                   title:title,\n  //                   body:text,\n  //             })\n  //             //console.log(props.selectedNote.body);\n  // \t}, 1500)\n  // ).current\n\n\n  useEffect(() => {\n    setText(props.selectedNote.body);\n    setTitle(props.selectedNote.title);\n    setId(props.selectedNote.id);\n    console.log('this ', id);\n  }, []);\n  useEffect(() => {\n    if (props.selectedNote.id !== id) {\n      setText(props.selectedNote.body);\n      setTitle(props.selectedNote.title);\n      setId(props.selectedNote.id);\n      console.log('this is ', id);\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.editorContainer,\n    children: /*#__PURE__*/_jsxDEV(ReactQuill, {\n      value: text,\n      onChange: debounce(updateBody, 1500)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 19\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 13\n  }, this);\n}\n\n_s(EditorComponent, \"Hreu84UdV21yIBlpRXLfr6Du/hQ=\");\n\n_c = EditorComponent;\nexport default withStyles(styles)(EditorComponent);\n\nvar _c;\n\n$RefreshReg$(_c, \"EditorComponent\");","map":{"version":3,"sources":["/home/pritam/Documents/GitHub/evernote-clone/evernote-clone/src/editor/editor.js"],"names":["React","useState","useRef","useEffect","ReactQuill","debounce","BorderColorIcon","withStyles","styles","EditorComponent","props","text","setText","title","setTitle","id","setId","classes","updateBody","val","noteUpdate","body","func","delay","timer","args","clearTimeout","setTimeout","apply","selectedNote","console","log","editorContainer"],"mappings":";;;AACA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,MAAzB,EAAiCC,SAAjC,QAAiD,OAAjD;AACA,OAAOC,UAAP,MAAuB,aAAvB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,eAAP,MAA4B,gCAA5B;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,MAAP,MAAmB,UAAnB;;;AAEA,SAASC,eAAT,CAAyBC,KAAzB,EAAgC;AAAA;;AAC1B,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBX,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACY,KAAD,EAAQC,QAAR,IAAoBb,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACc,EAAD,EAAKC,KAAL,IAAcf,QAAQ,CAAC,EAAD,CAA5B;AACA,QAAMgB,OAAO,GAAGP,KAAhB,CAJ0B,CAO1B;AACA;AACA;AACA;;AAGA,QAAMQ,UAAU,GAAIC,GAAD,IAAS;AACtBT,IAAAA,KAAK,CAACU,UAAN,CAAiBL,EAAjB,EAAqB;AACnBF,MAAAA,KAAK,EAAEA,KADY;AAEnBQ,MAAAA,IAAI,EAAEF;AAFa,KAArB;AAKAP,IAAAA,OAAO,CAACO,GAAD,CAAP;AACL,GAPD;;AASA,QAAMd,QAAQ,GAAG,CAACiB,IAAD,EAAOC,KAAP,KAAiB;AAC5B,QAAIC,KAAJ;AAEA,WAAO,CAAC,GAAGC,IAAJ,KAAa;AAClBC,MAAAA,YAAY,CAACF,KAAD,CAAZ;AACAA,MAAAA,KAAK,GAAGG,UAAU,CAAC,MAAML,IAAI,CAACM,KAAL,CAAW,IAAX,EAAiBH,IAAjB,CAAP,EAA+BF,KAA/B,CAAlB;AACD,KAHD;AAIL,GAPD,CAtB0B,CA+B1B;AACL;AACA;AACK;AACA;AACA;AACA;AACL;AACK;;;AAEApB,EAAAA,SAAS,CAAC,MAAI;AACRS,IAAAA,OAAO,CAACF,KAAK,CAACmB,YAAN,CAAmBR,IAApB,CAAP;AACAP,IAAAA,QAAQ,CAACJ,KAAK,CAACmB,YAAN,CAAmBhB,KAApB,CAAR;AACAG,IAAAA,KAAK,CAACN,KAAK,CAACmB,YAAN,CAAmBd,EAApB,CAAL;AACAe,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAoBhB,EAApB;AACL,GALQ,EAKP,EALO,CAAT;AASAZ,EAAAA,SAAS,CAAC,MAAI;AACR,QAAGO,KAAK,CAACmB,YAAN,CAAmBd,EAAnB,KAA0BA,EAA7B,EAAiC;AACjCH,MAAAA,OAAO,CAACF,KAAK,CAACmB,YAAN,CAAmBR,IAApB,CAAP;AACAP,MAAAA,QAAQ,CAACJ,KAAK,CAACmB,YAAN,CAAmBhB,KAApB,CAAR;AACAG,MAAAA,KAAK,CAACN,KAAK,CAACmB,YAAN,CAAmBd,EAApB,CAAL;AACAe,MAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBhB,EAAxB;AACC;AACN,GAPQ,EAOP,EAPO,CAAT;AASF,sBAEQ;AAAK,IAAA,SAAS,EAAEE,OAAO,CAACe,eAAxB;AAAA,2BACM,QAAC,UAAD;AACM,MAAA,KAAK,EAAIrB,IADf;AAEM,MAAA,QAAQ,EAAEN,QAAQ,CAACa,UAAD,EAAa,IAAb;AAFxB;AAAA;AAAA;AAAA;AAAA;AADN;AAAA;AAAA;AAAA;AAAA,UAFR;AAUH;;GArEQT,e;;KAAAA,e;AAuET,eAAeF,UAAU,CAACC,MAAD,CAAV,CAAoBC,eAApB,CAAf","sourcesContent":["\nimport React, {useState, useRef, useEffect} from 'react';\nimport ReactQuill from 'react-quill';\nimport debounce from '../helpers';\nimport BorderColorIcon from '@material-ui/icons/BorderColor';\nimport { withStyles } from '@material-ui/core/styles';\nimport styles from './styles';\n\nfunction EditorComponent(props) {\n      const [text, setText] = useState('');\n      const [title, setTitle] = useState('');\n      const [id, setId] = useState('');\n      const classes = props;\n\n\n      // const updateBody = async(val)=>{\n      //       await setText(val);\n      //       update();\n      // };\n\n\n      const updateBody = (val) => {\n            props.noteUpdate(id, {\n              title: title,\n              body: val\n            });\n        \n            setText(val);\n      };\n        \n      const debounce = (func, delay) => {\n            let timer;\n        \n            return (...args) => {\n              clearTimeout(timer);\n              timer = setTimeout(() => func.apply(null, args), delay);\n            };\n      };\n\n      // const update = useRef(\n\t// \tdebounce(() => {\n\t// \t\tprops.noteUpdate(id,{\n      //                   title:title,\n      //                   body:text,\n      //             })\n      //             //console.log(props.selectedNote.body);\n\t// \t}, 1500)\n      // ).current\n\n      useEffect(()=>{\n            setText(props.selectedNote.body);\n            setTitle(props.selectedNote.title);\n            setId(props.selectedNote.id);\n            console.log('this ',id)\n      },[])\n\n \n\n      useEffect(()=>{\n            if(props.selectedNote.id !== id) {\n            setText(props.selectedNote.body);\n            setTitle(props.selectedNote.title);\n            setId(props.selectedNote.id);\n            console.log('this is ', id)\n            }\n      },[])\n\n    return (\n        \n            <div className={classes.editorContainer}>\n                  <ReactQuill\n                        value = {text}\n                        onChange={debounce(updateBody, 1500)}>\n\n                  </ReactQuill>\n            </div>\n      );\n}\n\nexport default withStyles(styles) (EditorComponent) ;"]},"metadata":{},"sourceType":"module"}