{"ast":null,"code":"var _jsxFileName = \"/home/pritam/Documents/GitHub/evernote-clone/evernote-clone/src/sidebar/sidebar.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport styles from './styles';\nimport List from '@material-ui/core/List';\nimport { Divider, Button } from '@material-ui/core';\nimport SidebarItemComponent from '../sidebaritem/sidebarItem';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction SidebarComponent(props) {\n  _s();\n\n  const [addingNote, setAddingNote] = useState(false);\n  const [title, setTitle] = useState(null);\n\n  const newNoteBtnClick = () => {\n    setAddingNote(!addingNote);\n    setTitle(null);\n  };\n\n  const {\n    notes,\n    classes,\n    selectedNoteIndex\n  } = props;\n\n  const updateTitle = txt => {\n    setTitle(txt);\n  };\n\n  const newNote = () => {\n    props.newNote(title);\n    setTitle(null);\n    setAddingNote(false);\n  };\n\n  const selectNote = (n, i) => props.selectNote(n, i);\n\n  const deleteNote = note => {\n    props.deleteNote(note);\n  };\n\n  console.log(notes);\n\n  if (notes) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.sidebarContainer,\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        onClick: newNoteBtnClick,\n        className: classes.newNoteBtn,\n        children: addingNote ? 'Cancel' : 'New Note'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 19\n      }, this), addingNote ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: classes.newNoteInput,\n          placeholder: \"Enter note title\",\n          onKeyUp: e => updateTitle(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 31\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          className: classes.newNoteSubmitBtn,\n          onClick: newNote,\n          children: \"Submit Note\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 31\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 25\n      }, this) : null, /*#__PURE__*/_jsxDEV(List, {\n        children: Array.isArray(notes) && notes.map((_note, _index) => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(SidebarItemComponent, {\n              _note: _note,\n              _index: _index,\n              selectedNoteIndex: selectedNoteIndex,\n              selectNote: selectNote,\n              deleteNote: deleteNote\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 49\n            }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 49\n            }, this)]\n          }, _index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 43\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 19\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"yo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 19\n    }, this);\n  }\n}\n\n_s(SidebarComponent, \"+/AJaWFnSGwVe5K02UVYENJbWjI=\");\n\n_c = SidebarComponent;\nexport default withStyles(styles)(SidebarComponent);\n\nvar _c;\n\n$RefreshReg$(_c, \"SidebarComponent\");","map":{"version":3,"sources":["/home/pritam/Documents/GitHub/evernote-clone/evernote-clone/src/sidebar/sidebar.js"],"names":["React","useState","withStyles","styles","List","Divider","Button","SidebarItemComponent","SidebarComponent","props","addingNote","setAddingNote","title","setTitle","newNoteBtnClick","notes","classes","selectedNoteIndex","updateTitle","txt","newNote","selectNote","n","i","deleteNote","note","console","log","sidebarContainer","newNoteBtn","newNoteInput","e","target","value","newNoteSubmitBtn","Array","isArray","map","_note","_index"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport styles from './styles';\nimport List from '@material-ui/core/List';\nimport { Divider, Button } from '@material-ui/core';\nimport SidebarItemComponent from '../sidebaritem/sidebarItem';\n\nfunction SidebarComponent(props)\n{\n      const [addingNote, setAddingNote] = useState(false);\n      const [title, setTitle] = useState(null);\n\n      const newNoteBtnClick = () => {\n            setAddingNote (!(addingNote));\n            setTitle (null);\n      }\n\n      const { notes, classes, selectedNoteIndex } = props;\n\n      const updateTitle = (txt) => {\n            setTitle(txt);\n      }\n\n      const newNote = () => {\n            props.newNote(title);\n            setTitle(null);\n            setAddingNote(false);\n      }\n      const selectNote = (n, i) => props.selectNote(n, i);\n      const deleteNote = (note) => {\n            props.deleteNote(note);\n      }\nconsole.log(notes);\n     if(notes){\n      return (\n            <div className={classes.sidebarContainer}>\n                  <Button \n                        onClick={newNoteBtnClick}\n                        className={classes.newNoteBtn}>{addingNote ? 'Cancel' : 'New Note'}</Button>\n                  {\n                        addingNote ? \n                        <div>\n                              <input type = 'text'\n                              className = {classes.newNoteInput}\n                              placeholder = 'Enter note title'\n                              onKeyUp={(e)=>updateTitle(e.target.value)}>\n                              </input>\n                              <Button\n                                    className={classes.newNoteSubmitBtn}\n                                    onClick={newNote}>Submit Note</Button>\n                        \n                        </div> : \n                              null\n                  }\n                  <List>\n                        { Array.isArray(notes) &&\n                              notes.map((_note,_index) => {\n                                    return(\n                                          <div key={_index}>\n                                                <SidebarItemComponent\n                                                _note={_note}\n                                                _index={_index}\n                                                selectedNoteIndex={selectedNoteIndex}\n                                                selectNote={selectNote}\n                                                deleteNote={deleteNote}>\n\n                                                </SidebarItemComponent>\n                                                <Divider></Divider>\n                                          </div>\n                                    )\n                              })\n                        }\n                  </List>\n            </div>\n      );\n     } else{\n           return(<div>yo</div>)\n     }\n}\n\nexport default withStyles(styles) (SidebarComponent);"]},"metadata":{},"sourceType":"module"}