{"ast":null,"code":"import _slicedToArray from\"/home/pritam/Documents/GitHub/evernote-clone/evernote-clone/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useRef,useEffect}from'react';import ReactQuill from'react-quill';import debounce from'../helpers';import BorderColorIcon from'@material-ui/icons/BorderColor';import{withStyles}from'@material-ui/core/styles';import styles from'./styles';import{jsx as _jsx}from\"react/jsx-runtime\";function EditorComponent(props){var _useState=useState(''),_useState2=_slicedToArray(_useState,2),text=_useState2[0],setText=_useState2[1];var _useState3=useState(props.selectedNote.title),_useState4=_slicedToArray(_useState3,2),title=_useState4[0],setTitle=_useState4[1];var _useState5=useState(props.selectedNote.id),_useState6=_slicedToArray(_useState5,2),id=_useState6[0],setId=_useState6[1];var classes=props;// const updateBody = async(val)=>{\n//       await setText(val);\n//       update();\n// };\nvar updateBody=function updateBody(val){props.noteUpdate(id,{title:title,body:val});setText(val);//console.log('this ',id)\n};var debounce=function debounce(func,delay){var timer;return function(){for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}clearTimeout(timer);timer=setTimeout(function(){return func.apply(null,args);},delay);};};// const update = useRef(\n// \tdebounce(() => {\n// \t\tprops.noteUpdate(id,{\n//                   title:title,\n//                   body:text,\n//             })\n//             //console.log(props.selectedNote.body);\n// \t}, 1500)\n// ).current\nuseEffect(function(){setText(props.selectedNote.body);setTitle(props.selectedNote.title);setId(props.selectedNote.id);//console.log('this ',id)\n},[]);useEffect(function(){if(props.selectedNote.id!==id){setText(props.selectedNote.body);setTitle(props.selectedNote.title);setId(props.selectedNote.id);//console.log('this is ', id)\n}},[]);return/*#__PURE__*/_jsx(\"div\",{className:classes.editorContainer,children:/*#__PURE__*/_jsx(ReactQuill,{value:text,onChange:debounce(updateBody,1500)})});}export default withStyles(styles)(EditorComponent);","map":{"version":3,"sources":["/home/pritam/Documents/GitHub/evernote-clone/evernote-clone/src/editor/editor.js"],"names":["React","useState","useRef","useEffect","ReactQuill","debounce","BorderColorIcon","withStyles","styles","EditorComponent","props","text","setText","selectedNote","title","setTitle","id","setId","classes","updateBody","val","noteUpdate","body","func","delay","timer","args","clearTimeout","setTimeout","apply","editorContainer"],"mappings":"kLACA,MAAOA,CAAAA,KAAP,EAAeC,QAAf,CAAyBC,MAAzB,CAAiCC,SAAjC,KAAiD,OAAjD,CACA,MAAOC,CAAAA,UAAP,KAAuB,aAAvB,CACA,MAAOC,CAAAA,QAAP,KAAqB,YAArB,CACA,MAAOC,CAAAA,eAAP,KAA4B,gCAA5B,CACA,OAASC,UAAT,KAA2B,0BAA3B,CACA,MAAOC,CAAAA,MAAP,KAAmB,UAAnB,C,2CAEA,QAASC,CAAAA,eAAT,CAAyBC,KAAzB,CAAgC,eACFT,QAAQ,CAAC,EAAD,CADN,wCACnBU,IADmB,eACbC,OADa,8BAEAX,QAAQ,CAACS,KAAK,CAACG,YAAN,CAAmBC,KAApB,CAFR,yCAEnBA,KAFmB,eAEZC,QAFY,8BAGNd,QAAQ,CAACS,KAAK,CAACG,YAAN,CAAmBG,EAApB,CAHF,yCAGnBA,EAHmB,eAGfC,KAHe,eAI1B,GAAMC,CAAAA,OAAO,CAAGR,KAAhB,CAGA;AACA;AACA;AACA;AAGA,GAAMS,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAACC,GAAD,CAAS,CACtBV,KAAK,CAACW,UAAN,CAAiBL,EAAjB,CAAqB,CACnBF,KAAK,CAAEA,KADY,CAEnBQ,IAAI,CAAEF,GAFa,CAArB,EAKAR,OAAO,CAACQ,GAAD,CAAP,CACA;AACL,CARD,CAUA,GAAMf,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAACkB,IAAD,CAAOC,KAAP,CAAiB,CAC5B,GAAIC,CAAAA,KAAJ,CAEA,MAAO,WAAa,+BAATC,IAAS,0CAATA,IAAS,wBAClBC,YAAY,CAACF,KAAD,CAAZ,CACAA,KAAK,CAAGG,UAAU,CAAC,iBAAML,CAAAA,IAAI,CAACM,KAAL,CAAW,IAAX,CAAiBH,IAAjB,CAAN,EAAD,CAA+BF,KAA/B,CAAlB,CACD,CAHD,CAIL,CAPD,CASA;AACL;AACA;AACK;AACA;AACA;AACA;AACL;AACK;AAEArB,SAAS,CAAC,UAAI,CACRS,OAAO,CAACF,KAAK,CAACG,YAAN,CAAmBS,IAApB,CAAP,CACAP,QAAQ,CAACL,KAAK,CAACG,YAAN,CAAmBC,KAApB,CAAR,CACAG,KAAK,CAACP,KAAK,CAACG,YAAN,CAAmBG,EAApB,CAAL,CACA;AACL,CALQ,CAKP,EALO,CAAT,CASAb,SAAS,CAAC,UAAI,CACR,GAAGO,KAAK,CAACG,YAAN,CAAmBG,EAAnB,GAA0BA,EAA7B,CAAiC,CACjCJ,OAAO,CAACF,KAAK,CAACG,YAAN,CAAmBS,IAApB,CAAP,CACAP,QAAQ,CAACL,KAAK,CAACG,YAAN,CAAmBC,KAApB,CAAR,CACAG,KAAK,CAACP,KAAK,CAACG,YAAN,CAAmBG,EAApB,CAAL,CACA;AACC,CACN,CAPQ,CAOP,EAPO,CAAT,CASF,mBAEQ,YAAK,SAAS,CAAEE,OAAO,CAACY,eAAxB,uBACM,KAAC,UAAD,EACM,KAAK,CAAInB,IADf,CAEM,QAAQ,CAAEN,QAAQ,CAACc,UAAD,CAAa,IAAb,CAFxB,EADN,EAFR,CAUH,CAED,cAAeZ,CAAAA,UAAU,CAACC,MAAD,CAAV,CAAoBC,eAApB,CAAf","sourcesContent":["\nimport React, {useState, useRef, useEffect} from 'react';\nimport ReactQuill from 'react-quill';\nimport debounce from '../helpers';\nimport BorderColorIcon from '@material-ui/icons/BorderColor';\nimport { withStyles } from '@material-ui/core/styles';\nimport styles from './styles';\n\nfunction EditorComponent(props) {\n      const [text, setText] = useState('');\n      const [title, setTitle] = useState(props.selectedNote.title);\n      const [id, setId] = useState(props.selectedNote.id);\n      const classes = props;\n\n\n      // const updateBody = async(val)=>{\n      //       await setText(val);\n      //       update();\n      // };\n\n\n      const updateBody = (val) => {\n            props.noteUpdate(id, {\n              title: title,\n              body: val\n            });\n            \n            setText(val);\n            //console.log('this ',id)\n      };\n        \n      const debounce = (func, delay) => {\n            let timer;\n        \n            return (...args) => {\n              clearTimeout(timer);\n              timer = setTimeout(() => func.apply(null, args), delay);\n            };\n      };\n\n      // const update = useRef(\n\t// \tdebounce(() => {\n\t// \t\tprops.noteUpdate(id,{\n      //                   title:title,\n      //                   body:text,\n      //             })\n      //             //console.log(props.selectedNote.body);\n\t// \t}, 1500)\n      // ).current\n\n      useEffect(()=>{\n            setText(props.selectedNote.body);\n            setTitle(props.selectedNote.title);\n            setId(props.selectedNote.id);\n            //console.log('this ',id)\n      },[])\n\n \n\n      useEffect(()=>{\n            if(props.selectedNote.id !== id) {\n            setText(props.selectedNote.body);\n            setTitle(props.selectedNote.title);\n            setId(props.selectedNote.id);\n            //console.log('this is ', id)\n            }\n      },[])\n\n    return (\n        \n            <div className={classes.editorContainer}>\n                  <ReactQuill\n                        value = {text}\n                        onChange={debounce(updateBody, 1500)}>\n\n                  </ReactQuill>\n            </div>\n      );\n}\n\nexport default withStyles(styles) (EditorComponent) ;"]},"metadata":{},"sourceType":"module"}