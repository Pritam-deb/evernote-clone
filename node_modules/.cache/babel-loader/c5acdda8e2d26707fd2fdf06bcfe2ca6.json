{"ast":null,"code":"import _toConsumableArray from\"/home/pritam/Documents/GitHub/evernote-clone/evernote-clone/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _regeneratorRuntime from\"/home/pritam/Documents/GitHub/evernote-clone/evernote-clone/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/home/pritam/Documents/GitHub/evernote-clone/evernote-clone/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/home/pritam/Documents/GitHub/evernote-clone/evernote-clone/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect,useState}from'react';//import firebase from './firebase/config'\n//import logo from './logo.svg';\nimport'./App.css';import projectFirestore from'./firebase/config';import{Button,withStyles}from'@material-ui/core';import firebase from'firebase/app';import EditorComponent from'./editor/editor';import SidebarComponent from'./sidebar/sidebar';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function App(){var _useState=useState(null),_useState2=_slicedToArray(_useState,2),selectedNote=_useState2[0],setSelectedNote=_useState2[1];var _useState3=useState(null),_useState4=_slicedToArray(_useState3,2),notes=_useState4[0],setNotes=_useState4[1];var _useState5=useState(null),_useState6=_slicedToArray(_useState5,2),selectedNoteIndex=_useState6[0],setSelectedNoteIndex=_useState6[1];useEffect(function(){firebase.firestore().collection('notes').onSnapshot(function(serverUpdate){var notes=serverUpdate.docs.map(function(_doc){var data=_doc.data();data['id']=_doc.id;return data;});console.log(notes);setNotes(notes);});},[]);var selectNote=function selectNote(note,index){setSelectedNote(note);setSelectedNoteIndex(index);};var noteUpdate=function noteUpdate(id,noteObj){firebase.firestore().collection('notes').doc(id).update({title:noteObj.title,body:noteObj.body,timestamp:firebase.firestore.FieldValue.serverTimestamp()});//console.log('the ID is: ',id);\n};var deleteNote=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(note){var noteIndex;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:noteIndex=notes.indexOf(note);_context.next=3;return setNotes(notes.filter(function(_note){return _note!==note;}));case 3:if(selectedNoteIndex===noteIndex){setSelectedNoteIndex(null);setSelectedNote(null);}else{notes.length>1?selectNote(notes[selectedNoteIndex-1],selectedNoteIndex-1):setSelectedNoteIndex(null);setSelectedNote(null);}firebase.firestore().collection('notes').doc(note.id).delete();case 5:case\"end\":return _context.stop();}}},_callee);}));return function deleteNote(_x){return _ref.apply(this,arguments);};}();var newNote=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(title){var note,newFromDB,newID,newNoteIndex;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:note={title:title,body:''};_context2.next=3;return firebase.firestore().collection('notes').add({title:note.title,body:note.body,timestamp:firebase.firestore.FieldValue.serverTimestamp()});case 3:newFromDB=_context2.sent;newID=newFromDB.id;_context2.next=7;return setNotes({notes:[].concat(_toConsumableArray(notes),[note])});case 7:newNoteIndex=notes.indexOf(notes.filter(function(_note){return _note.id===newID;})[0]);setSelectedNote(notes[newNoteIndex]);setSelectedNoteIndex(newNoteIndex);case 10:case\"end\":return _context2.stop();}}},_callee2);}));return function newNote(_x2){return _ref2.apply(this,arguments);};}();return/*#__PURE__*/_jsxs(\"div\",{className:\"App\",children:[/*#__PURE__*/_jsx(SidebarComponent,{selectedNoteIndex:selectedNoteIndex,notes:notes,deleteNote:deleteNote,selectNote:selectNote,newNote:newNote}),selectedNote?/*#__PURE__*/_jsx(EditorComponent,{selectedNote:selectedNote,selectedNoteIndex:selectedNoteIndex,notes:notes,noteUpdate:noteUpdate},selectedNoteIndex):null]});// const componentDidMount = () => {\n//   firebase\n//     .firestore()\n//     .collection('notes')\n//     .onSnapshot(serverUpdate => {\n//       const notes = serverUpdate.docs.map(_doc => {\n//         const data = _doc.data();\n//         data['id'] = _doc.id;\n//         return data;\n//       });\n//       console.log(notes);\n//       this.setState({ notes: notes });\n//     });\n// }\n}export default App;","map":{"version":3,"sources":["/home/pritam/Documents/GitHub/evernote-clone/evernote-clone/src/App.js"],"names":["React","useEffect","useState","projectFirestore","Button","withStyles","firebase","EditorComponent","SidebarComponent","App","selectedNote","setSelectedNote","notes","setNotes","selectedNoteIndex","setSelectedNoteIndex","firestore","collection","onSnapshot","serverUpdate","docs","map","_doc","data","id","console","log","selectNote","note","index","noteUpdate","noteObj","doc","update","title","body","timestamp","FieldValue","serverTimestamp","deleteNote","noteIndex","indexOf","filter","_note","length","delete","newNote","add","newFromDB","newID","newNoteIndex"],"mappings":"6sBAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,CAA2BC,QAA3B,KAA2C,OAA3C,CACA;AACA;AACA,MAAO,WAAP,CACA,MAAOC,CAAAA,gBAAP,KAA6B,mBAA7B,CACA,OAAQC,MAAR,CAAgBC,UAAhB,KAAiC,mBAAjC,CACA,MAAOC,CAAAA,QAAP,KAAqB,cAArB,CACA,MAAOC,CAAAA,eAAP,KAA4B,iBAA5B,CACA,MAAOC,CAAAA,gBAAP,KAA6B,mBAA7B,C,wFAEA,QAASC,CAAAA,GAAT,EAAe,eAC2BP,QAAQ,CAAC,IAAD,CADnC,wCACNQ,YADM,eACQC,eADR,8BAEaT,QAAQ,CAAC,IAAD,CAFrB,yCAENU,KAFM,eAECC,QAFD,8BAGqCX,QAAQ,CAAC,IAAD,CAH7C,yCAGNY,iBAHM,eAGaC,oBAHb,eAKbd,SAAS,CAAC,UAAI,CACZK,QAAQ,CACLU,SADH,GAEGC,UAFH,CAEc,OAFd,EAGGC,UAHH,CAGc,SAAAC,YAAY,CAAI,CAC1B,GAAMP,CAAAA,KAAK,CAAGO,YAAY,CAACC,IAAb,CAAkBC,GAAlB,CAAsB,SAAAC,IAAI,CAAI,CAC1C,GAAMC,CAAAA,IAAI,CAAGD,IAAI,CAACC,IAAL,EAAb,CACAA,IAAI,CAAC,IAAD,CAAJ,CAAaD,IAAI,CAACE,EAAlB,CACA,MAAOD,CAAAA,IAAP,CACD,CAJa,CAAd,CAKAE,OAAO,CAACC,GAAR,CAAYd,KAAZ,EACAC,QAAQ,CAACD,KAAD,CAAR,CACD,CAXH,EAYD,CAbQ,CAaP,EAbO,CAAT,CAeA,GAAMe,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAACC,IAAD,CAAOC,KAAP,CAAiB,CAClClB,eAAe,CAACiB,IAAD,CAAf,CACAb,oBAAoB,CAACc,KAAD,CAApB,CACD,CAHD,CAKA,GAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAACN,EAAD,CAAKO,OAAL,CAAiB,CAClCzB,QAAQ,CACLU,SADH,GAEGC,UAFH,CAEc,OAFd,EAGGe,GAHH,CAGOR,EAHP,EAIGS,MAJH,CAIU,CACNC,KAAK,CAAEH,OAAO,CAACG,KADT,CAENC,IAAI,CAAEJ,OAAO,CAACI,IAFR,CAGNC,SAAS,CAAE9B,QAAQ,CAACU,SAAT,CAAmBqB,UAAnB,CAA8BC,eAA9B,EAHL,CAJV,EASA;AACD,CAXD,CAaA,GAAMC,CAAAA,UAAU,0FAAG,iBAAMX,IAAN,gIACXY,SADW,CACC5B,KAAK,CAAC6B,OAAN,CAAcb,IAAd,CADD,uBAEXf,CAAAA,QAAQ,CAACD,KAAK,CAAC8B,MAAN,CAAa,SAAAC,KAAK,QAAIA,CAAAA,KAAK,GAAKf,IAAd,EAAlB,CAAD,CAFG,QAGjB,GAAGd,iBAAiB,GAAK0B,SAAzB,CAAoC,CAEjCzB,oBAAoB,CAAC,IAAD,CAApB,CACAJ,eAAe,CAAC,IAAD,CAAf,CACF,CAJD,IAKI,CACFC,KAAK,CAACgC,MAAN,CAAe,CAAf,CACAjB,UAAU,CAACf,KAAK,CAACE,iBAAiB,CAAG,CAArB,CAAN,CAA+BA,iBAAiB,CAAG,CAAnD,CADV,CAECC,oBAAoB,CAAC,IAAD,CAFrB,CAGCJ,eAAe,CAAC,IAAD,CAAf,CACF,CAEDL,QAAQ,CAACU,SAAT,GAAqBC,UAArB,CAAgC,OAAhC,EAAyCe,GAAzC,CAA6CJ,IAAI,CAACJ,EAAlD,EAAsDqB,MAAtD,GAfiB,sDAAH,kBAAVN,CAAAA,UAAU,4CAAhB,CAoBA,GAAMO,CAAAA,OAAO,2FAAG,kBAAMZ,KAAN,4JACRN,IADQ,CACD,CACXM,KAAK,CAAEA,KADI,CAEXC,IAAI,CAAE,EAFK,CADC,wBAMU7B,CAAAA,QAAQ,CAACU,SAAT,GAAqBC,UAArB,CAAgC,OAAhC,EAAyC8B,GAAzC,CAA6C,CACnEb,KAAK,CAAEN,IAAI,CAACM,KADuD,CAEnEC,IAAI,CAAEP,IAAI,CAACO,IAFwD,CAGnEC,SAAS,CAAE9B,QAAQ,CAACU,SAAT,CAAmBqB,UAAnB,CAA8BC,eAA9B,EAHwD,CAA7C,CANV,QAMRU,SANQ,gBAWRC,KAXQ,CAWAD,SAAS,CAACxB,EAXV,wBAYRX,CAAAA,QAAQ,CAAC,CAAED,KAAK,8BAAMA,KAAN,GAAagB,IAAb,EAAP,CAAD,CAZA,QAaRsB,YAbQ,CAaOtC,KAAK,CAAC6B,OAAN,CAAc7B,KAAK,CAAC8B,MAAN,CAAa,SAAAC,KAAK,QAAIA,CAAAA,KAAK,CAACnB,EAAN,GAAayB,KAAjB,EAAlB,EAA0C,CAA1C,CAAd,CAbP,CAcdtC,eAAe,CAACC,KAAK,CAACsC,YAAD,CAAN,CAAf,CACAnC,oBAAoB,CAACmC,YAAD,CAApB,CAfc,yDAAH,kBAAPJ,CAAAA,OAAO,8CAAb,CAkBA,mBACE,aAAK,SAAS,CAAC,KAAf,wBAEI,KAAC,gBAAD,EACI,iBAAiB,CAAIhC,iBADzB,CAEI,KAAK,CAAIF,KAFb,CAGI,UAAU,CAAE2B,UAHhB,CAII,UAAU,CAAIZ,UAJlB,CAKI,OAAO,CAAEmB,OALb,EAFJ,CAWIpC,YAAY,cACV,KAAC,eAAD,EAEA,YAAY,CAAEA,YAFd,CAGA,iBAAiB,CAAEI,iBAHnB,CAIA,KAAK,CAAIF,KAJT,CAKA,UAAU,CAAIkB,UALd,EACOhB,iBADP,CADU,CAOZ,IAlBJ,GADF,CA2BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD,CAED,cAAeL,CAAAA,GAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\n//import firebase from './firebase/config'\n//import logo from './logo.svg';\nimport './App.css';\nimport projectFirestore from './firebase/config';\nimport {Button, withStyles} from '@material-ui/core';\nimport firebase from 'firebase/app';\nimport EditorComponent from './editor/editor';\nimport SidebarComponent from './sidebar/sidebar';\n\nfunction App() {\n  const [selectedNote, setSelectedNote] = useState(null);\n  const [notes, setNotes] = useState(null);\n  const [selectedNoteIndex, setSelectedNoteIndex] = useState(null);\n\n  useEffect(()=>{\n    firebase\n      .firestore()\n      .collection('notes')\n      .onSnapshot(serverUpdate => {\n        const notes = serverUpdate.docs.map(_doc => {\n          const data = _doc.data();\n          data['id'] = _doc.id;\n          return data;\n        });\n        console.log(notes);\n        setNotes(notes);\n      })\n  },[])\n\n  const selectNote = (note, index) => {\n    setSelectedNote(note);\n    setSelectedNoteIndex(index);\n  }\n\n  const noteUpdate = (id, noteObj) => {\n    firebase\n      .firestore()\n      .collection('notes')\n      .doc(id)\n      .update({\n        title: noteObj.title,\n        body: noteObj.body,\n        timestamp: firebase.firestore.FieldValue.serverTimestamp()\n      })\n    //console.log('the ID is: ',id);\n  }\n\n  const deleteNote = async(note) => {\n    const noteIndex = notes.indexOf(note);\n    await setNotes(notes.filter(_note => _note !== note));\n    if(selectedNoteIndex === noteIndex) {\n\n       setSelectedNoteIndex(null);\n       setSelectedNote(null);\n    }\n    else{\n      notes.length > 1 ?\n      selectNote(notes[selectedNoteIndex - 1], selectedNoteIndex - 1) : \n       setSelectedNoteIndex(null);\n       setSelectedNote(null);\n    }\n\n    firebase.firestore().collection('notes').doc(note.id).delete();\n  }\n\n\n\n  const newNote = async(title) => {\n    const note = {\n      title: title,\n      body: ''\n    };\n     \n    const newFromDB = await firebase.firestore().collection('notes').add({\n      title: note.title,\n      body: note.body,\n      timestamp: firebase.firestore.FieldValue.serverTimestamp()\n    });\n    const newID = newFromDB.id;\n    await setNotes({ notes: [...notes, note] });\n    const newNoteIndex = notes.indexOf(notes.filter(_note => _note.id === newID)[0]);\n    setSelectedNote(notes[newNoteIndex]);\n    setSelectedNoteIndex(newNoteIndex);\n  }\n\n  return (\n    <div className=\"App\">\n      \n        <SidebarComponent \n            selectedNoteIndex = {selectedNoteIndex}\n            notes = {notes}\n            deleteNote={deleteNote}\n            selectNote = {selectNote}\n            newNote={newNote}\n            >\n        </SidebarComponent>\n        {\n        selectedNote ? \n          <EditorComponent \n          key = {selectedNoteIndex}\n          selectedNote={selectedNote}\n          selectedNoteIndex={selectedNoteIndex}\n          notes = {notes}\n          noteUpdate = {noteUpdate}></EditorComponent>  :\n        null\n        }\n        \n        \n    </div>\n  );\n\n\n  // const componentDidMount = () => {\n  //   firebase\n  //     .firestore()\n  //     .collection('notes')\n  //     .onSnapshot(serverUpdate => {\n  //       const notes = serverUpdate.docs.map(_doc => {\n  //         const data = _doc.data();\n  //         data['id'] = _doc.id;\n  //         return data;\n  //       });\n  //       console.log(notes);\n  //       this.setState({ notes: notes });\n  //     });\n  // }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}