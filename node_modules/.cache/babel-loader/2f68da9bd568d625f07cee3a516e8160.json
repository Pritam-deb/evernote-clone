{"ast":null,"code":"var _jsxFileName = \"/home/pritam/Documents/GitHub/evernote-clone/evernote-clone/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react'; //import firebase from './firebase/config'\n//import logo from './logo.svg';\n\nimport './App.css';\nimport projectFirestore from './firebase/config';\nimport { Button, withStyles } from '@material-ui/core';\nimport firebase from 'firebase/app';\nimport EditorComponent from './editor/editor';\nimport SidebarComponent from './sidebar/sidebar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [selectedNote, setSelectedNote] = useState(null);\n  const [notes, setNotes] = useState(null);\n  const [selectedNoteIndex, setSelectedNoteIndex] = useState(null);\n  useEffect(() => {\n    firebase.firestore().collection('notes').onSnapshot(serverUpdate => {\n      const notes = serverUpdate.docs.map(_doc => {\n        const data = _doc.data();\n\n        data['id'] = _doc.id;\n        return data;\n      });\n      console.log(notes);\n      setNotes(notes);\n    });\n  }, []);\n\n  const selectNote = (note, index) => {\n    setSelectedNote(note);\n    setSelectedNoteIndex(index);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(SidebarComponent, {\n      selectedNoteIndex: selectedNoteIndex,\n      notes: notes // deleteNote={this.deleteNote}\n      ,\n      selectNote: selectNote // newNote={this.newNote}\n\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(EditorComponent, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this); // const componentDidMount = () => {\n  //   firebase\n  //     .firestore()\n  //     .collection('notes')\n  //     .onSnapshot(serverUpdate => {\n  //       const notes = serverUpdate.docs.map(_doc => {\n  //         const data = _doc.data();\n  //         data['id'] = _doc.id;\n  //         return data;\n  //       });\n  //       console.log(notes);\n  //       this.setState({ notes: notes });\n  //     });\n  // }\n}\n\n_s(App, \"+nP3bDjXmrWk4PNFPNM7yYO4bAA=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/pritam/Documents/GitHub/evernote-clone/evernote-clone/src/App.js"],"names":["React","useEffect","useState","projectFirestore","Button","withStyles","firebase","EditorComponent","SidebarComponent","App","selectedNote","setSelectedNote","notes","setNotes","selectedNoteIndex","setSelectedNoteIndex","firestore","collection","onSnapshot","serverUpdate","docs","map","_doc","data","id","console","log","selectNote","note","index"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C,C,CACA;AACA;;AACA,OAAO,WAAP;AACA,OAAOC,gBAAP,MAA6B,mBAA7B;AACA,SAAQC,MAAR,EAAgBC,UAAhB,QAAiC,mBAAjC;AACA,OAAOC,QAAP,MAAqB,cAArB;AACA,OAAOC,eAAP,MAA4B,iBAA5B;AACA,OAAOC,gBAAP,MAA6B,mBAA7B;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCT,QAAQ,CAAC,IAAD,CAAhD;AACA,QAAM,CAACU,KAAD,EAAQC,QAAR,IAAoBX,QAAQ,CAAC,IAAD,CAAlC;AACA,QAAM,CAACY,iBAAD,EAAoBC,oBAApB,IAA4Cb,QAAQ,CAAC,IAAD,CAA1D;AAEAD,EAAAA,SAAS,CAAC,MAAI;AACZK,IAAAA,QAAQ,CACLU,SADH,GAEGC,UAFH,CAEc,OAFd,EAGGC,UAHH,CAGcC,YAAY,IAAI;AAC1B,YAAMP,KAAK,GAAGO,YAAY,CAACC,IAAb,CAAkBC,GAAlB,CAAsBC,IAAI,IAAI;AAC1C,cAAMC,IAAI,GAAGD,IAAI,CAACC,IAAL,EAAb;;AACAA,QAAAA,IAAI,CAAC,IAAD,CAAJ,GAAaD,IAAI,CAACE,EAAlB;AACA,eAAOD,IAAP;AACD,OAJa,CAAd;AAKAE,MAAAA,OAAO,CAACC,GAAR,CAAYd,KAAZ;AACAC,MAAAA,QAAQ,CAACD,KAAD,CAAR;AACD,KAXH;AAYD,GAbQ,EAaP,EAbO,CAAT;;AAeA,QAAMe,UAAU,GAAG,CAACC,IAAD,EAAOC,KAAP,KAAiB;AAClClB,IAAAA,eAAe,CAACiB,IAAD,CAAf;AACAb,IAAAA,oBAAoB,CAACc,KAAD,CAApB;AACD,GAHD;;AAOA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BAEI,QAAC,gBAAD;AACI,MAAA,iBAAiB,EAAIf,iBADzB;AAEI,MAAA,KAAK,EAAIF,KAFb,CAGI;AAHJ;AAII,MAAA,UAAU,EAAIe,UAJlB,CAKI;;AALJ;AAAA;AAAA;AAAA;AAAA,YAFJ,eAUI,QAAC,eAAD;AAAA;AAAA;AAAA;AAAA,YAVJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,CA3Ba,CA4Cb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD;;GA1DQlB,G;;KAAAA,G;AA4DT,eAAeA,GAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\n//import firebase from './firebase/config'\n//import logo from './logo.svg';\nimport './App.css';\nimport projectFirestore from './firebase/config';\nimport {Button, withStyles} from '@material-ui/core';\nimport firebase from 'firebase/app';\nimport EditorComponent from './editor/editor';\nimport SidebarComponent from './sidebar/sidebar';\n\nfunction App() {\n  const [selectedNote, setSelectedNote] = useState(null);\n  const [notes, setNotes] = useState(null);\n  const [selectedNoteIndex, setSelectedNoteIndex] = useState(null);\n\n  useEffect(()=>{\n    firebase\n      .firestore()\n      .collection('notes')\n      .onSnapshot(serverUpdate => {\n        const notes = serverUpdate.docs.map(_doc => {\n          const data = _doc.data();\n          data['id'] = _doc.id;\n          return data;\n        });\n        console.log(notes);\n        setNotes(notes);\n      })\n  },[])\n\n  const selectNote = (note, index) => {\n    setSelectedNote(note);\n    setSelectedNoteIndex(index);\n  }\n\n\n\n  return (\n    <div className=\"App\">\n      \n        <SidebarComponent \n            selectedNoteIndex = {selectedNoteIndex}\n            notes = {notes}\n            // deleteNote={this.deleteNote}\n            selectNote = {selectNote}\n            // newNote={this.newNote}\n            >\n        </SidebarComponent>\n        <EditorComponent></EditorComponent>  \n        \n    </div>\n  );\n\n\n  // const componentDidMount = () => {\n  //   firebase\n  //     .firestore()\n  //     .collection('notes')\n  //     .onSnapshot(serverUpdate => {\n  //       const notes = serverUpdate.docs.map(_doc => {\n  //         const data = _doc.data();\n  //         data['id'] = _doc.id;\n  //         return data;\n  //       });\n  //       console.log(notes);\n  //       this.setState({ notes: notes });\n  //     });\n  // }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}